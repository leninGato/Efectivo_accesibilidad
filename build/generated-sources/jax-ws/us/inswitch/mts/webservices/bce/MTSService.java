
package us.inswitch.mts.webservices.bce;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MTSService", targetNamespace = "http://bce.webservices.mts.inswitch.us", wsdlLocation = "https://test.dineroelectronico.ec/mts_bce/services/MTSService?wsdl")
public class MTSService
    extends Service
{

    private final static URL MTSSERVICE_WSDL_LOCATION;
    private final static WebServiceException MTSSERVICE_EXCEPTION;
    private final static QName MTSSERVICE_QNAME = new QName("http://bce.webservices.mts.inswitch.us", "MTSService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://test.dineroelectronico.ec/mts_bce/services/MTSService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MTSSERVICE_WSDL_LOCATION = url;
        MTSSERVICE_EXCEPTION = e;
    }

    public MTSService() {
        super(__getWsdlLocation(), MTSSERVICE_QNAME);
    }

    public MTSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MTSSERVICE_QNAME, features);
    }

    public MTSService(URL wsdlLocation) {
        super(wsdlLocation, MTSSERVICE_QNAME);
    }

    public MTSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MTSSERVICE_QNAME, features);
    }

    public MTSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MTSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsSoap11Endpoint")
    public MTSServicePortType getMTSServiceHttpsSoap11Endpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsSoap11Endpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsSoap11Endpoint")
    public MTSServicePortType getMTSServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsSoap11Endpoint"), MTSServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpSoap11Endpoint")
    public MTSServicePortType getMTSServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpSoap11Endpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpSoap11Endpoint")
    public MTSServicePortType getMTSServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpSoap11Endpoint"), MTSServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpSoap12Endpoint")
    public MTSServicePortType getMTSServiceHttpSoap12Endpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpSoap12Endpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpSoap12Endpoint")
    public MTSServicePortType getMTSServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpSoap12Endpoint"), MTSServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsSoap12Endpoint")
    public MTSServicePortType getMTSServiceHttpsSoap12Endpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsSoap12Endpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsSoap12Endpoint")
    public MTSServicePortType getMTSServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsSoap12Endpoint"), MTSServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsEndpoint")
    public MTSServicePortType getMTSServiceHttpsEndpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsEndpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpsEndpoint")
    public MTSServicePortType getMTSServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpsEndpoint"), MTSServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpEndpoint")
    public MTSServicePortType getMTSServiceHttpEndpoint() {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpEndpoint"), MTSServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MTSServicePortType
     */
    @WebEndpoint(name = "MTSServiceHttpEndpoint")
    public MTSServicePortType getMTSServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://bce.webservices.mts.inswitch.us", "MTSServiceHttpEndpoint"), MTSServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MTSSERVICE_EXCEPTION!= null) {
            throw MTSSERVICE_EXCEPTION;
        }
        return MTSSERVICE_WSDL_LOCATION;
    }

}
